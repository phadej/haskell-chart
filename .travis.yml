# See also https://github.com/hvr/multi-ghc-travis
language: c
sudo: false

cache:
  directories:
    - $HOME/.cabal/packages
    - $HOME/.cabal/store

before_cache:
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/build-reports.log
  # remove files that are regenerated by 'cabal update'
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/00-index.*
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/*.json
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.cache
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.tar
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.tar.idx

matrix:
  include:
    - compiler: "ghc-7.10.3"
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-7.10.3,libgtk2.0-dev,libgtk-3-dev,libcairo-dev], sources: [hvr-ghc]}}
    - compiler: "ghc-8.0.2"
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-8.0.2,libgtk2.0-dev,libgtk-3-dev,libcairo-dev], sources: [hvr-ghc]}}
    - compiler: "ghc-8.2.2"
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-8.2.2,libgtk2.0-dev,libgtk-3-dev,libcairo-dev], sources: [hvr-ghc]}}
    - compiler: "ghc-8.4.2"
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-8.4.2,libgtk2.0-dev,libgtk-3-dev,libcairo-dev], sources: [hvr-ghc]}}

before_install:
 - HC=${CC}
 - unset CC
 - PATH=/opt/ghc/bin:/opt/ghc-ppa-tools/bin:$PATH

install:
 - cabal --version
 - echo "$(${HC} --version) [$(${HC} --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - travis_retry cabal update -v
 - cabal new-build -w ${HC} --dep all

# Here starts the actual work to be performed for the package under test;
# any command which exits with a non-zero exit code causes the build to fail.
script:
# prepare `cabal sdist` source-tree environment to make sure source-tarballs are complete
 - read -a PKGS <<< "chart chart-cairo chart-diagrams chart-tests chart-gtk chart-gtk3"
 - rm -rf sdists; mkdir sdists
 - for PKG in "${PKGS[@]}"; do
     cd "$PKG"; cabal sdist --output-directory="../sdists/$PKG" || break; cd ..;
   done
 - cd sdists/

 # build all packages
 - cp -v ../cabal.project ./
 - cabal new-build -j1 all
 # run test harness
 - time $(find dist-newstyle -type f -executable -name chart-harness | head -n 1) charts-cairo --svg
 # cabal new-build and data files don't play yet well together
 # https://github.com/haskell/cabal/issues/4120
 # - time $(find dist-newstyle -type f -executable -name chart-harness | head -n 1) charts-diagrams --svg
 # and run testsuite
 # - $(find dist-newstyle -type f -executable -name doctests | head -n 1)

# EOF
